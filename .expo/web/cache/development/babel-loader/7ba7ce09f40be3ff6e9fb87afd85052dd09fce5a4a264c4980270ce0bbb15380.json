{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ThemeContext = createContext(undefined);\nvar THEME_STORAGE_KEY = \"app_theme\";\nvar lightTheme = {\n  primary: \"#3b82f6\",\n  secondary: \"#8b5cf6\",\n  background: \"#f8fafc\",\n  surface: \"#ffffff\",\n  text: \"#1e293b\",\n  textSecondary: \"#64748b\",\n  border: \"#e2e8f0\",\n  success: \"#10b981\",\n  warning: \"#f59e0b\",\n  error: \"#ef4444\",\n  card: \"#ffffff\"\n};\nvar darkTheme = {\n  primary: \"#3b82f6\",\n  secondary: \"#8b5cf6\",\n  background: \"#030712\",\n  surface: \"#0f172a\",\n  text: \"#f9fafb\",\n  textSecondary: \"#94a3b8\",\n  border: \"#1e293b\",\n  success: \"#10b981\",\n  warning: \"#f59e0b\",\n  error: \"#ef4444\",\n  card: \"#0f172a\"\n};\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  useEffect(function () {\n    loadSavedTheme();\n  }, []);\n  var loadSavedTheme = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedTheme = yield AsyncStorage.getItem(THEME_STORAGE_KEY);\n        if (savedTheme !== null) {\n          setIsDarkMode(savedTheme === \"dark\");\n        }\n      } catch (error) {\n        console.error(\"Error loading saved theme:\", error);\n      }\n    });\n    return function loadSavedTheme() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTheme = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var newTheme = !isDarkMode;\n        setIsDarkMode(newTheme);\n        yield AsyncStorage.setItem(THEME_STORAGE_KEY, newTheme ? \"dark\" : \"light\");\n      } catch (error) {\n        console.error(\"Error saving theme:\", error);\n      }\n    });\n    return function toggleTheme() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var contextValue = {\n    isDarkMode: isDarkMode,\n    toggleTheme: toggleTheme,\n    colors: isDarkMode ? darkTheme : lightTheme\n  };\n  return _jsx(ThemeContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n};\nexport var useTheme = function useTheme() {\n  var context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\nexport default ThemeProvider;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","jsx","_jsx","ThemeContext","undefined","THEME_STORAGE_KEY","lightTheme","primary","secondary","background","surface","text","textSecondary","border","success","warning","error","card","darkTheme","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","loadSavedTheme","_ref2","_asyncToGenerator","savedTheme","getItem","console","apply","arguments","toggleTheme","_ref3","newTheme","setItem","contextValue","colors","Provider","value","useTheme","context","Error"],"sources":["/app/code/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface ThemeContextType {\n  isDarkMode: boolean;\n  toggleTheme: () => Promise<void>;\n  colors: {\n    primary: string;\n    secondary: string;\n    background: string;\n    surface: string;\n    text: string;\n    textSecondary: string;\n    border: string;\n    success: string;\n    warning: string;\n    error: string;\n    card: string;\n  };\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = \"app_theme\";\n\nconst lightTheme = {\n  primary: \"#3b82f6\",\n  secondary: \"#8b5cf6\",\n  background: \"#f8fafc\",\n  surface: \"#ffffff\",\n  text: \"#1e293b\",\n  textSecondary: \"#64748b\",\n  border: \"#e2e8f0\",\n  success: \"#10b981\",\n  warning: \"#f59e0b\",\n  error: \"#ef4444\",\n  card: \"#ffffff\",\n};\n\nconst darkTheme = {\n  primary: \"#3b82f6\",\n  secondary: \"#8b5cf6\",\n  background: \"#030712\",\n  surface: \"#0f172a\",\n  text: \"#f9fafb\",\n  textSecondary: \"#94a3b8\",\n  border: \"#1e293b\",\n  success: \"#10b981\",\n  warning: \"#f59e0b\",\n  error: \"#ef4444\",\n  card: \"#0f172a\",\n};\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(true);\n\n  useEffect(() => {\n    loadSavedTheme();\n  }, []);\n\n  const loadSavedTheme = async () => {\n    try {\n      const savedTheme = await AsyncStorage.getItem(THEME_STORAGE_KEY);\n      if (savedTheme !== null) {\n        setIsDarkMode(savedTheme === \"dark\");\n      }\n    } catch (error) {\n      console.error(\"Error loading saved theme:\", error);\n    }\n  };\n\n  const toggleTheme = async () => {\n    try {\n      const newTheme = !isDarkMode;\n      setIsDarkMode(newTheme);\n      await AsyncStorage.setItem(\n        THEME_STORAGE_KEY,\n        newTheme ? \"dark\" : \"light\",\n      );\n    } catch (error) {\n      console.error(\"Error saving theme:\", error);\n    }\n  };\n\n  const contextValue: ThemeContextType = {\n    isDarkMode,\n    toggleTheme,\n    colors: isDarkMode ? darkTheme : lightTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n\nexport default ThemeProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar MOCK_USERS = [{\n  id: \"1\",\n  email: \"ethan.carter@example.com\",\n  firstName: \"Ethan\",\n  lastName: \"Carter\",\n  displayName: \"Ethan Carter\",\n  avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&h=200&fit=crop&crop=face\",\n  level: \"Intermediate\",\n  joinDate: \"2021-03-15\",\n  stats: {\n    completedCourses: 12,\n    solvedExercises: 247,\n    totalPoints: 2456,\n    currentStreak: 15,\n    averageScore: 87\n  }\n}, {\n  id: \"2\",\n  email: \"demo@codementor.ai\",\n  firstName: \"Demo\",\n  lastName: \"User\",\n  displayName: \"Demo User\",\n  avatar: \"https://images.unsplash.com/photo-1494790108755-2616b612b784?w=200&h=200&fit=crop&crop=face\",\n  level: \"Beginner\",\n  joinDate: \"2024-01-01\",\n  stats: {\n    completedCourses: 3,\n    solvedExercises: 45,\n    totalPoints: 680,\n    currentStreak: 7,\n    averageScore: 78\n  }\n}, {\n  id: \"3\",\n  email: \"admin@codementor.ai\",\n  firstName: \"Admin\",\n  lastName: \"User\",\n  displayName: \"Admin User\",\n  avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face\",\n  level: \"Expert\",\n  joinDate: \"2020-01-01\",\n  stats: {\n    completedCourses: 25,\n    solvedExercises: 500,\n    totalPoints: 5420,\n    currentStreak: 45,\n    averageScore: 95\n  }\n}];\nvar AuthService = function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n    this.currentUser = null;\n    this.isAuthenticated = false;\n  }\n  return _createClass(AuthService, [{\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        var user = MOCK_USERS.find(function (u) {\n          return u.email.toLowerCase() === email.toLowerCase();\n        });\n        if (!user) {\n          return {\n            success: false,\n            error: \"Kullanıcı bulunamadı\"\n          };\n        }\n        if (password.length < 3) {\n          return {\n            success: false,\n            error: \"Şifre en az 3 karakter olmalıdır\"\n          };\n        }\n        this.currentUser = user;\n        this.isAuthenticated = true;\n        if (typeof window !== \"undefined\") {\n          localStorage.setItem(\"codementor_user\", JSON.stringify(user));\n          localStorage.setItem(\"codementor_auth\", \"true\");\n        }\n        return {\n          success: true,\n          user: user\n        };\n      });\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1500);\n        });\n        var existingUser = MOCK_USERS.find(function (u) {\n          return u.email.toLowerCase() === userData.email.toLowerCase();\n        });\n        if (existingUser) {\n          return {\n            success: false,\n            error: \"Bu e-posta adresi zaten kullanımda\"\n          };\n        }\n        var newUser = {\n          id: Date.now().toString(),\n          email: userData.email,\n          firstName: userData.firstName,\n          lastName: userData.lastName,\n          displayName: `${userData.firstName} ${userData.lastName}`,\n          level: \"Beginner\",\n          joinDate: new Date().toISOString().split(\"T\")[0],\n          stats: {\n            completedCourses: 0,\n            solvedExercises: 0,\n            totalPoints: 0,\n            currentStreak: 0,\n            averageScore: 0\n          }\n        };\n        MOCK_USERS.push(newUser);\n        this.currentUser = newUser;\n        this.isAuthenticated = true;\n        if (typeof window !== \"undefined\") {\n          localStorage.setItem(\"codementor_user\", JSON.stringify(newUser));\n          localStorage.setItem(\"codementor_auth\", \"true\");\n        }\n        return {\n          success: true,\n          user: newUser\n        };\n      });\n      function register(_x3) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"checkAuth\",\n    value: function checkAuth() {\n      if (this.isAuthenticated && this.currentUser) {\n        return true;\n      }\n      if (typeof window !== \"undefined\") {\n        var authStatus = localStorage.getItem(\"codementor_auth\");\n        var userData = localStorage.getItem(\"codementor_user\");\n        if (authStatus === \"true\" && userData) {\n          try {\n            this.currentUser = JSON.parse(userData);\n            this.isAuthenticated = true;\n            return true;\n          } catch (error) {\n            console.error(\"Failed to parse user data:\", error);\n            this.logout();\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"getCurrentUser\",\n    value: function getCurrentUser() {\n      if (!this.isAuthenticated) {\n        this.checkAuth();\n      }\n      return this.currentUser;\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.currentUser = null;\n      this.isAuthenticated = false;\n      if (typeof window !== \"undefined\") {\n        localStorage.removeItem(\"codementor_user\");\n        localStorage.removeItem(\"codementor_auth\");\n      }\n    }\n  }, {\n    key: \"updateUserStats\",\n    value: function () {\n      var _updateUserStats = _asyncToGenerator(function* (stats) {\n        if (this.currentUser) {\n          this.currentUser.stats = _objectSpread(_objectSpread({}, this.currentUser.stats), stats);\n          if (typeof window !== \"undefined\") {\n            localStorage.setItem(\"codementor_user\", JSON.stringify(this.currentUser));\n          }\n        }\n      });\n      function updateUserStats(_x4) {\n        return _updateUserStats.apply(this, arguments);\n      }\n      return updateUserStats;\n    }()\n  }, {\n    key: \"getMockUsers\",\n    value: function getMockUsers() {\n      return [].concat(MOCK_USERS);\n    }\n  }, {\n    key: \"quickLogin\",\n    value: function () {\n      var _quickLogin = _asyncToGenerator(function* (userId) {\n        var user = MOCK_USERS.find(function (u) {\n          return u.id === userId;\n        });\n        if (user) {\n          this.currentUser = user;\n          this.isAuthenticated = true;\n          if (typeof window !== \"undefined\") {\n            localStorage.setItem(\"codementor_user\", JSON.stringify(user));\n            localStorage.setItem(\"codementor_auth\", \"true\");\n          }\n          return {\n            success: true,\n            user: user\n          };\n        }\n        return {\n          success: false\n        };\n      });\n      function quickLogin(_x5) {\n        return _quickLogin.apply(this, arguments);\n      }\n      return quickLogin;\n    }()\n  }]);\n}();\nexport var authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["MOCK_USERS","id","email","firstName","lastName","displayName","avatar","level","joinDate","stats","completedCourses","solvedExercises","totalPoints","currentStreak","averageScore","AuthService","_classCallCheck","currentUser","isAuthenticated","_createClass","key","value","_login","_asyncToGenerator","password","Promise","resolve","setTimeout","user","find","u","toLowerCase","success","error","length","window","localStorage","setItem","JSON","stringify","login","_x","_x2","apply","arguments","_register","userData","existingUser","newUser","Date","now","toString","toISOString","split","push","register","_x3","checkAuth","authStatus","getItem","parse","console","logout","getCurrentUser","removeItem","_updateUserStats","_objectSpread","updateUserStats","_x4","getMockUsers","concat","_quickLogin","userId","quickLogin","_x5","authService"],"sources":["/app/code/src/services/authService.ts"],"sourcesContent":["export interface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  displayName: string;\n  avatar?: string;\n  level: \"Beginner\" | \"Intermediate\" | \"Advanced\" | \"Expert\";\n  joinDate: string;\n  stats: {\n    completedCourses: number;\n    solvedExercises: number;\n    totalPoints: number;\n    currentStreak: number;\n    averageScore: number;\n  };\n}\n\n// Mock users for development/demo\nconst MOCK_USERS: User[] = [\n  {\n    id: \"1\",\n    email: \"ethan.carter@example.com\",\n    firstName: \"Ethan\",\n    lastName: \"Carter\",\n    displayName: \"Ethan Carter\",\n    avatar:\n      \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=200&h=200&fit=crop&crop=face\",\n    level: \"Intermediate\",\n    joinDate: \"2021-03-15\",\n    stats: {\n      completedCourses: 12,\n      solvedExercises: 247,\n      totalPoints: 2456,\n      currentStreak: 15,\n      averageScore: 87,\n    },\n  },\n  {\n    id: \"2\",\n    email: \"demo@codementor.ai\",\n    firstName: \"Demo\",\n    lastName: \"User\",\n    displayName: \"Demo User\",\n    avatar:\n      \"https://images.unsplash.com/photo-1494790108755-2616b612b784?w=200&h=200&fit=crop&crop=face\",\n    level: \"Beginner\",\n    joinDate: \"2024-01-01\",\n    stats: {\n      completedCourses: 3,\n      solvedExercises: 45,\n      totalPoints: 680,\n      currentStreak: 7,\n      averageScore: 78,\n    },\n  },\n  {\n    id: \"3\",\n    email: \"admin@codementor.ai\",\n    firstName: \"Admin\",\n    lastName: \"User\",\n    displayName: \"Admin User\",\n    avatar:\n      \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face\",\n    level: \"Expert\",\n    joinDate: \"2020-01-01\",\n    stats: {\n      completedCourses: 25,\n      solvedExercises: 500,\n      totalPoints: 5420,\n      currentStreak: 45,\n      averageScore: 95,\n    },\n  },\n];\n\nclass AuthService {\n  private currentUser: User | null = null;\n  private isAuthenticated: boolean = false;\n\n  // Simulate login with mock data\n  async login(\n    email: string,\n    password: string,\n  ): Promise<{ success: boolean; user?: User; error?: string }> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    const user = MOCK_USERS.find(\n      (u) => u.email.toLowerCase() === email.toLowerCase(),\n    );\n\n    if (!user) {\n      return { success: false, error: \"Kullanıcı bulunamadı\" };\n    }\n\n    // For demo purposes, any password works\n    if (password.length < 3) {\n      return { success: false, error: \"Şifre en az 3 karakter olmalıdır\" };\n    }\n\n    this.currentUser = user;\n    this.isAuthenticated = true;\n\n    // Store in localStorage for persistence\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"codementor_user\", JSON.stringify(user));\n      localStorage.setItem(\"codementor_auth\", \"true\");\n    }\n\n    return { success: true, user };\n  }\n\n  // Register new user (mock implementation)\n  async register(userData: {\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n  }): Promise<{ success: boolean; user?: User; error?: string }> {\n    // Simulate API delay\n    await new Promise((resolve) => setTimeout(resolve, 1500));\n\n    // Check if user already exists\n    const existingUser = MOCK_USERS.find(\n      (u) => u.email.toLowerCase() === userData.email.toLowerCase(),\n    );\n    if (existingUser) {\n      return { success: false, error: \"Bu e-posta adresi zaten kullanımda\" };\n    }\n\n    // Create new user\n    const newUser: User = {\n      id: Date.now().toString(),\n      email: userData.email,\n      firstName: userData.firstName,\n      lastName: userData.lastName,\n      displayName: `${userData.firstName} ${userData.lastName}`,\n      level: \"Beginner\",\n      joinDate: new Date().toISOString().split(\"T\")[0],\n      stats: {\n        completedCourses: 0,\n        solvedExercises: 0,\n        totalPoints: 0,\n        currentStreak: 0,\n        averageScore: 0,\n      },\n    };\n\n    // Add to mock users (in real app, this would be API call)\n    MOCK_USERS.push(newUser);\n\n    this.currentUser = newUser;\n    this.isAuthenticated = true;\n\n    // Store in localStorage\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"codementor_user\", JSON.stringify(newUser));\n      localStorage.setItem(\"codementor_auth\", \"true\");\n    }\n\n    return { success: true, user: newUser };\n  }\n\n  // Check if user is authenticated\n  checkAuth(): boolean {\n    if (this.isAuthenticated && this.currentUser) {\n      return true;\n    }\n\n    // Check localStorage\n    if (typeof window !== \"undefined\") {\n      const authStatus = localStorage.getItem(\"codementor_auth\");\n      const userData = localStorage.getItem(\"codementor_user\");\n\n      if (authStatus === \"true\" && userData) {\n        try {\n          this.currentUser = JSON.parse(userData);\n          this.isAuthenticated = true;\n          return true;\n        } catch (error) {\n          console.error(\"Failed to parse user data:\", error);\n          this.logout();\n        }\n      }\n    }\n\n    return false;\n  }\n\n  // Get current user\n  getCurrentUser(): User | null {\n    if (!this.isAuthenticated) {\n      this.checkAuth();\n    }\n    return this.currentUser;\n  }\n\n  // Logout\n  logout(): void {\n    this.currentUser = null;\n    this.isAuthenticated = false;\n\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"codementor_user\");\n      localStorage.removeItem(\"codementor_auth\");\n    }\n  }\n\n  // Update user stats (mock implementation)\n  async updateUserStats(stats: Partial<User[\"stats\"]>): Promise<void> {\n    if (this.currentUser) {\n      this.currentUser.stats = { ...this.currentUser.stats, ...stats };\n\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\n          \"codementor_user\",\n          JSON.stringify(this.currentUser),\n        );\n      }\n    }\n  }\n\n  // Get all mock users (for demo purposes)\n  getMockUsers(): User[] {\n    return [...MOCK_USERS];\n  }\n\n  // Quick login for demo (bypasses password)\n  async quickLogin(userId: string): Promise<{ success: boolean; user?: User }> {\n    const user = MOCK_USERS.find((u) => u.id === userId);\n    if (user) {\n      this.currentUser = user;\n      this.isAuthenticated = true;\n\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"codementor_user\", JSON.stringify(user));\n        localStorage.setItem(\"codementor_auth\", \"true\");\n      }\n\n      return { success: true, user };\n    }\n    return { success: false };\n  }\n}\n\nexport const authService = new AuthService();\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
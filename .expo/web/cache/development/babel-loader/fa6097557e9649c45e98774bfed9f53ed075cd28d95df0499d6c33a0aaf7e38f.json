{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Avatar } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageSwitch from \"../components/common/LanguageSwitch\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  height = _Dimensions$get.height;\nvar AIChatScreen = function AIChatScreen() {\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState([{\n      id: \"1\",\n      content: t(\"aiChat.welcome\", \"Merhaba! Ben CodeMentor AI. C ve C++ hakkında her türlü sorunuzu cevaplayabilirim. Size nasıl yardımcı olabilirim?\"),\n      sender: \"ai\",\n      timestamp: new Date(),\n      type: \"text\"\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputMessage = _useState4[0],\n    setInputMessage = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isTyping = _useState6[0],\n    setIsTyping = _useState6[1];\n  var scrollViewRef = useRef(null);\n  var suggestedQuestions = [t(\"aiChat.examples.pointers\"), t(\"aiChat.examples.classes\"), t(\"aiChat.examples.memory\"), t(\"aiChat.examples.debugging\"), t(\"aiChat.examples.virtual\", \"Virtual function ne işe yarar?\"), t(\"aiChat.examples.stl\", \"STL vector nasıl kullanılır?\")];\n  var quickActions = [{\n    icon: \"code-slash\",\n    label: t(\"aiChat.quickActions.explainCode\", \"Kod Açıkla\"),\n    description: t(\"aiChat.examples.debugging\")\n  }, {\n    icon: \"help-circle\",\n    label: t(\"aiChat.quickActions.askQuestion\", \"Soru Sor\"),\n    description: t(\"aiChat.examples.pointers\")\n  }, {\n    icon: \"book\",\n    label: t(\"aiChat.quickActions.concept\", \"Kavram Öğren\"),\n    description: t(\"aiChat.examples.classes\")\n  }, {\n    icon: \"bug\",\n    label: t(\"aiChat.quickActions.debug\", \"Hata Bul\"),\n    description: t(\"aiChat.examples.memory\")\n  }];\n  useEffect(function () {\n    var _scrollViewRef$curren;\n    (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollToEnd({\n      animated: true\n    });\n  }, [messages]);\n  var generateAIResponse = function () {\n    var _ref = _asyncToGenerator(function* (userInput) {\n      try {\n        if (typeof window !== \"undefined\") {\n          var response = yield fetch(\"http://localhost:11434/api/generate\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              model: \"llama3\",\n              prompt: `Sen bir C/C++ programlama eğitmenisin. Aşağıdaki soruya Türkçe olarak cevap ver: \"${userInput}\"`,\n              stream: false,\n              options: {\n                temperature: 0.7\n              }\n            })\n          });\n          if (response.ok) {\n            var data = yield response.json();\n            return {\n              id: Date.now().toString(),\n              content: data.response || \"AI yanıtı alınamadı.\",\n              sender: \"ai\",\n              timestamp: new Date(),\n              type: userInput.includes(\"kod\") || userInput.includes(\"```\") ? \"code\" : \"text\"\n            };\n          }\n        }\n        var mockResponses = [\"Bu çok güzel bir soru! C/C++ programlamada bu konu oldukça önemli...\", \"Bu konuyu açıklayayım: C dilinde pointer'lar bellek adreslerini tutar...\", \"C++ ile C arasındaki temel fark, C++'ın nesne yönelimli programlamayı desteklemesidir...\", \"Memory leak problemi, dinamik olarak ayrılan belleğin serbest bırakılmaması durumunda oluşur...\"];\n        var mockContent = mockResponses[Math.floor(Math.random() * mockResponses.length)];\n        return {\n          id: Date.now().toString(),\n          content: mockContent,\n          sender: \"ai\",\n          timestamp: new Date(),\n          type: \"text\"\n        };\n      } catch (error) {\n        return {\n          id: Date.now().toString(),\n          content: t(\"aiChat.error\", \"Üzgünüm, şu anda yanıt veremiyorum. Lütfen daha sonra tekrar deneyin.\"),\n          sender: \"ai\",\n          timestamp: new Date(),\n          type: \"text\"\n        };\n      }\n    });\n    return function generateAIResponse(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleSendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!inputMessage.trim()) return;\n      var userMessage = {\n        id: Date.now().toString(),\n        content: inputMessage,\n        sender: \"user\",\n        timestamp: new Date(),\n        type: \"text\"\n      };\n      var currentInput = inputMessage;\n      setMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [userMessage]);\n      });\n      setInputMessage(\"\");\n      setIsTyping(true);\n      try {\n        var aiResponse = yield generateAIResponse(currentInput);\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [aiResponse]);\n        });\n      } catch (error) {\n        console.error(\"Failed to get AI response:\", error);\n        var errorMessage = {\n          id: Date.now().toString(),\n          content: t(\"aiChat.error\", \"Üzgünüm, şu anda yanıt veremiyorum. Lütfen daha sonra tekrar deneyin.\"),\n          sender: \"ai\",\n          timestamp: new Date(),\n          type: \"text\"\n        };\n        setMessages(function (prev) {\n          return [].concat(_toConsumableArray(prev), [errorMessage]);\n        });\n      } finally {\n        setIsTyping(false);\n      }\n    });\n    return function handleSendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleQuestionClick = function handleQuestionClick(question) {\n    setInputMessage(question);\n  };\n  var renderMessage = function renderMessage(message) {\n    var isUser = message.sender === \"user\";\n    return _jsxs(View, {\n      style: [styles.messageContainer, isUser ? styles.userMessageContainer : styles.aiMessageContainer],\n      children: [!isUser && _jsx(Avatar.Icon, {\n        size: 32,\n        icon: \"robot\",\n        style: styles.aiAvatar\n      }), _jsxs(View, {\n        style: [styles.messageBubble, isUser ? styles.userBubble : styles.aiBubble],\n        children: [message.type === \"code\" ? _jsxs(View, {\n          children: [_jsx(Text, {\n            style: [styles.messageText, !isUser && styles.aiMessageText],\n            children: message.content.split(\"\\n\\n\")[0]\n          }), message.content.includes(\"int x = 10;\") && _jsx(View, {\n            style: styles.codeBlock,\n            children: _jsx(Text, {\n              style: styles.codeText,\n              children: message.content.split(\"\\n\\n\")[1]\n            })\n          }), _jsx(Text, {\n            style: [styles.messageText, !isUser && styles.aiMessageText],\n            children: message.content.split(\"\\n\\n\").slice(2).join(\"\\n\\n\")\n          })]\n        }) : _jsx(Text, {\n          style: [styles.messageText, !isUser && styles.aiMessageText],\n          children: message.content\n        }), _jsx(Text, {\n          style: styles.timestamp,\n          children: message.timestamp.toLocaleTimeString(\"tr-TR\", {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        })]\n      }), isUser && _jsx(Avatar.Icon, {\n        size: 32,\n        icon: \"account\",\n        style: styles.userAvatar\n      })]\n    }, message.id);\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(LinearGradient, {\n        colors: [\"#3b82f6\", \"#8b5cf6\"],\n        style: styles.headerGradient,\n        children: _jsxs(View, {\n          style: styles.headerContent,\n          children: [_jsx(Avatar.Icon, {\n            size: 48,\n            icon: \"robot\",\n            style: styles.headerAvatar\n          }), _jsxs(View, {\n            style: styles.headerInfo,\n            children: [_jsx(Text, {\n              style: styles.headerTitle,\n              children: \"CodeMentor AI\"\n            }), _jsxs(View, {\n              style: styles.statusContainer,\n              children: [_jsx(View, {\n                style: styles.onlineIndicator\n              }), _jsx(Text, {\n                style: styles.statusText,\n                children: t(\"aiChat.online\", \"Çevrimiçi\")\n              })]\n            })]\n          }), _jsx(LanguageSwitch, {\n            style: styles.languageSwitch,\n            variant: \"icon\"\n          })]\n        })\n      })\n    }), messages.length === 1 && _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      style: styles.quickActionsScrollView,\n      children: quickActions.map(function (action, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.quickActionCard,\n          onPress: function onPress() {\n            return setInputMessage(action.description);\n          },\n          children: [_jsx(Ionicons, {\n            name: action.icon,\n            size: 24,\n            color: \"#3b82f6\"\n          }), _jsx(Text, {\n            style: styles.quickActionLabel,\n            children: action.label\n          }), _jsx(Text, {\n            style: styles.quickActionDescription,\n            children: action.description\n          })]\n        }, index);\n      })\n    }), messages.length === 1 && _jsxs(View, {\n      style: styles.suggestedSection,\n      children: [_jsx(Text, {\n        style: styles.suggestedTitle,\n        children: t(\"aiChat.examples.title\")\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.suggestedScrollView,\n        children: suggestedQuestions.map(function (question, index) {\n          return _jsx(TouchableOpacity, {\n            style: styles.suggestedChip,\n            onPress: function onPress() {\n              return handleQuestionClick(question);\n            },\n            children: _jsx(Text, {\n              style: styles.suggestionText,\n              children: question\n            })\n          }, index);\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      ref: scrollViewRef,\n      style: styles.messagesContainer,\n      contentContainerStyle: styles.messagesContent,\n      showsVerticalScrollIndicator: false,\n      children: [messages.map(renderMessage), isTyping && _jsxs(View, {\n        style: styles.typingContainer,\n        children: [_jsx(Avatar.Icon, {\n          size: 32,\n          icon: \"robot\",\n          style: styles.aiAvatar\n        }), _jsxs(View, {\n          style: styles.typingBubble,\n          children: [_jsx(Text, {\n            style: styles.typingText,\n            children: t(\"aiChat.typing\")\n          }), _jsxs(View, {\n            style: styles.typingDots,\n            children: [_jsx(View, {\n              style: [styles.typingDot, styles.typingDot1]\n            }), _jsx(View, {\n              style: [styles.typingDot, styles.typingDot2]\n            }), _jsx(View, {\n              style: [styles.typingDot, styles.typingDot3]\n            })]\n          })]\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsxs(View, {\n        style: styles.inputRow,\n        children: [_jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: t(\"aiChat.placeholder\"),\n          placeholderTextColor: \"#64748b\",\n          value: inputMessage,\n          onChangeText: setInputMessage,\n          multiline: true,\n          maxLength: 500\n        }), _jsx(TouchableOpacity, {\n          style: [styles.sendButton, !inputMessage.trim() && styles.sendButtonDisabled],\n          onPress: handleSendMessage,\n          disabled: !inputMessage.trim(),\n          children: _jsx(Ionicons, {\n            name: \"send\",\n            size: 20,\n            color: \"white\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.disclaimer,\n        children: t(\"aiChat.disclaimer\", \"AI yanıtları bilgilendirme amaçlıdır. Kritik projeler için doğrulama yapın.\")\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#030712\"\n  },\n  header: {\n    overflow: \"hidden\"\n  },\n  headerGradient: {\n    paddingTop: 40,\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  headerContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  headerAvatar: {\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\"\n  },\n  headerInfo: {\n    flex: 1,\n    marginLeft: 12\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    color: \"white\"\n  },\n  statusContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 2\n  },\n  onlineIndicator: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"#10b981\",\n    marginRight: 6\n  },\n  statusText: {\n    fontSize: 12,\n    color: \"rgba(255, 255, 255, 0.8)\"\n  },\n  languageSwitch: {\n    marginLeft: 12\n  },\n  quickActionsScrollView: {\n    paddingHorizontal: 20,\n    paddingVertical: 16\n  },\n  quickActionCard: {\n    backgroundColor: \"#0f172a\",\n    borderRadius: 12,\n    padding: 16,\n    marginRight: 12,\n    width: 140,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1e293b\"\n  },\n  quickActionLabel: {\n    fontSize: 12,\n    fontWeight: \"600\",\n    color: \"#f9fafb\",\n    marginTop: 8,\n    textAlign: \"center\"\n  },\n  quickActionDescription: {\n    fontSize: 10,\n    color: \"#64748b\",\n    marginTop: 4,\n    textAlign: \"center\"\n  },\n  suggestedSection: {\n    paddingHorizontal: 20,\n    paddingBottom: 16\n  },\n  suggestedTitle: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: \"#f9fafb\",\n    marginBottom: 12\n  },\n  suggestedScrollView: {\n    flexDirection: \"row\"\n  },\n  suggestedChip: {\n    backgroundColor: \"#1e293b\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: \"#334155\"\n  },\n  suggestionText: {\n    fontSize: 12,\n    color: \"#f9fafb\"\n  },\n  messagesContainer: {\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  messagesContent: {\n    paddingBottom: 20\n  },\n  messageContainer: {\n    flexDirection: \"row\",\n    marginBottom: 16,\n    alignItems: \"flex-end\"\n  },\n  userMessageContainer: {\n    justifyContent: \"flex-end\"\n  },\n  aiMessageContainer: {\n    justifyContent: \"flex-start\"\n  },\n  aiAvatar: {\n    backgroundColor: \"#3b82f6\",\n    marginRight: 8\n  },\n  userAvatar: {\n    backgroundColor: \"#64748b\",\n    marginLeft: 8\n  },\n  messageBubble: {\n    maxWidth: \"75%\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 18\n  },\n  userBubble: {\n    backgroundColor: \"#3b82f6\",\n    borderBottomRightRadius: 4\n  },\n  aiBubble: {\n    backgroundColor: \"#1e293b\",\n    borderBottomLeftRadius: 4\n  },\n  messageText: {\n    fontSize: 14,\n    color: \"white\",\n    lineHeight: 20\n  },\n  aiMessageText: {\n    color: \"#f9fafb\"\n  },\n  timestamp: {\n    fontSize: 10,\n    color: \"rgba(255, 255, 255, 0.6)\",\n    marginTop: 4\n  },\n  codeBlock: {\n    backgroundColor: \"#0a0a0a\",\n    borderRadius: 8,\n    padding: 12,\n    marginVertical: 8,\n    borderWidth: 1,\n    borderColor: \"#333\"\n  },\n  codeText: {\n    fontFamily: \"monospace\",\n    fontSize: 12,\n    color: \"#10b981\"\n  },\n  typingContainer: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    marginBottom: 16\n  },\n  typingBubble: {\n    backgroundColor: \"#1e293b\",\n    borderRadius: 18,\n    borderBottomLeftRadius: 4,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    marginLeft: 8\n  },\n  typingText: {\n    fontSize: 14,\n    color: \"#f9fafb\",\n    marginBottom: 4\n  },\n  typingDots: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  typingDot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: \"#64748b\",\n    marginRight: 4\n  },\n  typingDot1: {\n    opacity: 0.4\n  },\n  typingDot2: {\n    opacity: 0.7\n  },\n  typingDot3: {\n    opacity: 1\n  },\n  inputContainer: {\n    padding: 20,\n    backgroundColor: \"#0f172a\",\n    borderTopWidth: 1,\n    borderTopColor: \"#1e293b\"\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    backgroundColor: \"#1e293b\",\n    borderRadius: 24,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginBottom: 8\n  },\n  textInput: {\n    flex: 1,\n    color: \"#f9fafb\",\n    fontSize: 14,\n    maxHeight: 100,\n    paddingVertical: 8\n  },\n  sendButton: {\n    backgroundColor: \"#3b82f6\",\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 8\n  },\n  sendButtonDisabled: {\n    backgroundColor: \"#374151\"\n  },\n  disclaimer: {\n    fontSize: 11,\n    color: \"#64748b\",\n    textAlign: \"center\",\n    fontStyle: \"italic\"\n  }\n});\nexport default AIChatScreen;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","ScrollView","TouchableOpacity","StyleSheet","TextInput","KeyboardAvoidingView","Platform","Dimensions","Ionicons","Avatar","LinearGradient","useTranslation","LanguageSwitch","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","height","AIChatScreen","_useTranslation","t","_useState","id","content","sender","timestamp","Date","type","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","inputMessage","setInputMessage","_useState5","_useState6","isTyping","setIsTyping","scrollViewRef","suggestedQuestions","quickActions","icon","label","description","_scrollViewRef$curren","current","scrollToEnd","animated","generateAIResponse","_ref","_asyncToGenerator","userInput","window","response","fetch","method","headers","body","JSON","stringify","model","prompt","stream","options","temperature","ok","data","json","now","toString","includes","mockResponses","mockContent","Math","floor","random","length","error","_x","apply","arguments","handleSendMessage","_ref2","trim","userMessage","currentInput","prev","concat","_toConsumableArray","aiResponse","console","errorMessage","handleQuestionClick","question","renderMessage","message","isUser","style","styles","messageContainer","userMessageContainer","aiMessageContainer","children","Icon","size","aiAvatar","messageBubble","userBubble","aiBubble","messageText","aiMessageText","split","codeBlock","codeText","slice","join","toLocaleTimeString","hour","minute","userAvatar","container","behavior","OS","header","colors","headerGradient","headerContent","headerAvatar","headerInfo","headerTitle","statusContainer","onlineIndicator","statusText","languageSwitch","variant","horizontal","showsHorizontalScrollIndicator","quickActionsScrollView","map","action","index","quickActionCard","onPress","name","color","quickActionLabel","quickActionDescription","suggestedSection","suggestedTitle","suggestedScrollView","suggestedChip","suggestionText","ref","messagesContainer","contentContainerStyle","messagesContent","showsVerticalScrollIndicator","typingContainer","typingBubble","typingText","typingDots","typingDot","typingDot1","typingDot2","typingDot3","inputContainer","inputRow","textInput","placeholder","placeholderTextColor","value","onChangeText","multiline","maxLength","sendButton","sendButtonDisabled","disabled","disclaimer","create","flex","backgroundColor","overflow","paddingTop","paddingBottom","paddingHorizontal","flexDirection","alignItems","marginLeft","fontSize","fontWeight","marginTop","width","borderRadius","marginRight","paddingVertical","padding","borderWidth","borderColor","textAlign","marginBottom","justifyContent","maxWidth","borderBottomRightRadius","borderBottomLeftRadius","lineHeight","marginVertical","fontFamily","opacity","borderTopWidth","borderTopColor","maxHeight","fontStyle"],"sources":["/app/code/src/screens/AIChatScreen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  Dimensions,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Card, Chip, Avatar } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { useTranslation } from \"react-i18next\";\nimport LanguageSwitch from \"../components/common/LanguageSwitch\";\n\nconst { height } = Dimensions.get(\"window\");\n\ninterface Message {\n  id: string;\n  content: string;\n  sender: \"user\" | \"ai\";\n  timestamp: Date;\n  type?: \"text\" | \"code\";\n}\n\nconst AIChatScreen = () => {\n  const { t } = useTranslation();\n\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: \"1\",\n      content: t(\n        \"aiChat.welcome\",\n        \"Merhaba! Ben CodeMentor AI. C ve C++ hakkında her türlü sorunuzu cevaplayabilirim. Size nasıl yardımcı olabilirim?\",\n      ),\n      sender: \"ai\",\n      timestamp: new Date(),\n      type: \"text\",\n    },\n  ]);\n\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const scrollViewRef = useRef<ScrollView>(null);\n\n  const suggestedQuestions = [\n    t(\"aiChat.examples.pointers\"),\n    t(\"aiChat.examples.classes\"),\n    t(\"aiChat.examples.memory\"),\n    t(\"aiChat.examples.debugging\"),\n    t(\"aiChat.examples.virtual\", \"Virtual function ne işe yarar?\"),\n    t(\"aiChat.examples.stl\", \"STL vector nasıl kullanılır?\"),\n  ];\n\n  const quickActions = [\n    {\n      icon: \"code-slash\",\n      label: t(\"aiChat.quickActions.explainCode\", \"Kod Açıkla\"),\n      description: t(\"aiChat.examples.debugging\"),\n    },\n    {\n      icon: \"help-circle\",\n      label: t(\"aiChat.quickActions.askQuestion\", \"Soru Sor\"),\n      description: t(\"aiChat.examples.pointers\"),\n    },\n    {\n      icon: \"book\",\n      label: t(\"aiChat.quickActions.concept\", \"Kavram Öğren\"),\n      description: t(\"aiChat.examples.classes\"),\n    },\n    {\n      icon: \"bug\",\n      label: t(\"aiChat.quickActions.debug\", \"Hata Bul\"),\n      description: t(\"aiChat.examples.memory\"),\n    },\n  ];\n\n  useEffect(() => {\n    scrollViewRef.current?.scrollToEnd({ animated: true });\n  }, [messages]);\n\n  const generateAIResponse = async (userInput: string): Promise<Message> => {\n    try {\n      // Check if we're in web environment and have access to ollama\n      if (typeof window !== \"undefined\") {\n        // Try to make direct API call to Ollama\n        const response = await fetch(\"http://localhost:11434/api/generate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            model: \"llama3\",\n            prompt: `Sen bir C/C++ programlama eğitmenisin. Aşağıdaki soruya Türkçe olarak cevap ver: \"${userInput}\"`,\n            stream: false,\n            options: {\n              temperature: 0.7,\n            },\n          }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          return {\n            id: Date.now().toString(),\n            content: data.response || \"AI yanıtı alınamadı.\",\n            sender: \"ai\",\n            timestamp: new Date(),\n            type:\n              userInput.includes(\"kod\") || userInput.includes(\"```\")\n                ? \"code\"\n                : \"text\",\n          };\n        }\n      }\n\n      // Fallback response\n      const mockResponses = [\n        \"Bu çok güzel bir soru! C/C++ programlamada bu konu oldukça önemli...\",\n        \"Bu konuyu açıklayayım: C dilinde pointer'lar bellek adreslerini tutar...\",\n        \"C++ ile C arasındaki temel fark, C++'ın nesne yönelimli programlamayı desteklemesidir...\",\n        \"Memory leak problemi, dinamik olarak ayrılan belleğin serbest bırakılmaması durumunda oluşur...\",\n      ];\n\n      const mockContent =\n        mockResponses[Math.floor(Math.random() * mockResponses.length)];\n\n      return {\n        id: Date.now().toString(),\n        content: mockContent,\n        sender: \"ai\",\n        timestamp: new Date(),\n        type: \"text\",\n      };\n    } catch (error) {\n      return {\n        id: Date.now().toString(),\n        content: t(\n          \"aiChat.error\",\n          \"Üzgünüm, şu anda yanıt veremiyorum. Lütfen daha sonra tekrar deneyin.\",\n        ),\n        sender: \"ai\",\n        timestamp: new Date(),\n        type: \"text\",\n      };\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputMessage,\n      sender: \"user\",\n      timestamp: new Date(),\n      type: \"text\",\n    };\n\n    const currentInput = inputMessage;\n    setMessages((prev) => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n\n    try {\n      // Generate AI response using Ollama\n      const aiResponse = await generateAIResponse(currentInput);\n      setMessages((prev) => [...prev, aiResponse]);\n    } catch (error) {\n      console.error(\"Failed to get AI response:\", error);\n      const errorMessage: Message = {\n        id: Date.now().toString(),\n        content: t(\n          \"aiChat.error\",\n          \"Üzgünüm, şu anda yanıt veremiyorum. Lütfen daha sonra tekrar deneyin.\",\n        ),\n        sender: \"ai\",\n        timestamp: new Date(),\n        type: \"text\",\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleQuestionClick = (question: string) => {\n    setInputMessage(question);\n  };\n\n  const renderMessage = (message: Message) => {\n    const isUser = message.sender === \"user\";\n    return (\n      <View\n        key={message.id}\n        style={[\n          styles.messageContainer,\n          isUser ? styles.userMessageContainer : styles.aiMessageContainer,\n        ]}\n      >\n        {!isUser && (\n          <Avatar.Icon size={32} icon=\"robot\" style={styles.aiAvatar} />\n        )}\n\n        <View\n          style={[\n            styles.messageBubble,\n            isUser ? styles.userBubble : styles.aiBubble,\n          ]}\n        >\n          {message.type === \"code\" ? (\n            <View>\n              <Text\n                style={[styles.messageText, !isUser && styles.aiMessageText]}\n              >\n                {message.content.split(\"\\n\\n\")[0]}\n              </Text>\n              {message.content.includes(\"int x = 10;\") && (\n                <View style={styles.codeBlock}>\n                  <Text style={styles.codeText}>\n                    {message.content.split(\"\\n\\n\")[1]}\n                  </Text>\n                </View>\n              )}\n              <Text\n                style={[styles.messageText, !isUser && styles.aiMessageText]}\n              >\n                {message.content.split(\"\\n\\n\").slice(2).join(\"\\n\\n\")}\n              </Text>\n            </View>\n          ) : (\n            <Text style={[styles.messageText, !isUser && styles.aiMessageText]}>\n              {message.content}\n            </Text>\n          )}\n\n          <Text style={styles.timestamp}>\n            {message.timestamp.toLocaleTimeString(\"tr-TR\", {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n            })}\n          </Text>\n        </View>\n\n        {isUser && (\n          <Avatar.Icon size={32} icon=\"account\" style={styles.userAvatar} />\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n    >\n      {/* Header */}\n      <View style={styles.header}>\n        <LinearGradient\n          colors={[\"#3b82f6\", \"#8b5cf6\"]}\n          style={styles.headerGradient}\n        >\n          <View style={styles.headerContent}>\n            <Avatar.Icon size={48} icon=\"robot\" style={styles.headerAvatar} />\n            <View style={styles.headerInfo}>\n              <Text style={styles.headerTitle}>CodeMentor AI</Text>\n              <View style={styles.statusContainer}>\n                <View style={styles.onlineIndicator} />\n                <Text style={styles.statusText}>\n                  {t(\"aiChat.online\", \"Çevrimiçi\")}\n                </Text>\n              </View>\n            </View>\n            <LanguageSwitch style={styles.languageSwitch} variant=\"icon\" />\n          </View>\n        </LinearGradient>\n      </View>\n\n      {/* Quick Actions */}\n      {messages.length === 1 && (\n        <ScrollView\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          style={styles.quickActionsScrollView}\n        >\n          {quickActions.map((action, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.quickActionCard}\n              onPress={() => setInputMessage(action.description)}\n            >\n              <Ionicons name={action.icon as any} size={24} color=\"#3b82f6\" />\n              <Text style={styles.quickActionLabel}>{action.label}</Text>\n              <Text style={styles.quickActionDescription}>\n                {action.description}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      )}\n\n      {/* Suggested Questions */}\n      {messages.length === 1 && (\n        <View style={styles.suggestedSection}>\n          <Text style={styles.suggestedTitle}>\n            {t(\"aiChat.examples.title\")}\n          </Text>\n          <ScrollView\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={styles.suggestedScrollView}\n          >\n            {suggestedQuestions.map((question, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.suggestedChip}\n                onPress={() => handleQuestionClick(question)}\n              >\n                <Text style={styles.suggestionText}>{question}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n\n      {/* Messages */}\n      <ScrollView\n        ref={scrollViewRef}\n        style={styles.messagesContainer}\n        contentContainerStyle={styles.messagesContent}\n        showsVerticalScrollIndicator={false}\n      >\n        {messages.map(renderMessage)}\n\n        {isTyping && (\n          <View style={styles.typingContainer}>\n            <Avatar.Icon size={32} icon=\"robot\" style={styles.aiAvatar} />\n            <View style={styles.typingBubble}>\n              <Text style={styles.typingText}>{t(\"aiChat.typing\")}</Text>\n              <View style={styles.typingDots}>\n                <View style={[styles.typingDot, styles.typingDot1]} />\n                <View style={[styles.typingDot, styles.typingDot2]} />\n                <View style={[styles.typingDot, styles.typingDot3]} />\n              </View>\n            </View>\n          </View>\n        )}\n      </ScrollView>\n\n      {/* Input */}\n      <View style={styles.inputContainer}>\n        <View style={styles.inputRow}>\n          <TextInput\n            style={styles.textInput}\n            placeholder={t(\"aiChat.placeholder\")}\n            placeholderTextColor=\"#64748b\"\n            value={inputMessage}\n            onChangeText={setInputMessage}\n            multiline\n            maxLength={500}\n          />\n          <TouchableOpacity\n            style={[\n              styles.sendButton,\n              !inputMessage.trim() && styles.sendButtonDisabled,\n            ]}\n            onPress={handleSendMessage}\n            disabled={!inputMessage.trim()}\n          >\n            <Ionicons name=\"send\" size={20} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n        <Text style={styles.disclaimer}>\n          {t(\n            \"aiChat.disclaimer\",\n            \"AI yanıtları bilgilendirme amaçlıdır. Kritik projeler için doğrulama yapın.\",\n          )}\n        </Text>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#030712\",\n  },\n  header: {\n    overflow: \"hidden\",\n  },\n  headerGradient: {\n    paddingTop: 40,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n  },\n  headerContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  headerAvatar: {\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n  },\n  headerInfo: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n  statusContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: 2,\n  },\n  onlineIndicator: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"#10b981\",\n    marginRight: 6,\n  },\n  statusText: {\n    fontSize: 12,\n    color: \"rgba(255, 255, 255, 0.8)\",\n  },\n  languageSwitch: {\n    marginLeft: 12,\n  },\n  quickActionsScrollView: {\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n  },\n  quickActionCard: {\n    backgroundColor: \"#0f172a\",\n    borderRadius: 12,\n    padding: 16,\n    marginRight: 12,\n    width: 140,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#1e293b\",\n  },\n  quickActionLabel: {\n    fontSize: 12,\n    fontWeight: \"600\",\n    color: \"#f9fafb\",\n    marginTop: 8,\n    textAlign: \"center\",\n  },\n  quickActionDescription: {\n    fontSize: 10,\n    color: \"#64748b\",\n    marginTop: 4,\n    textAlign: \"center\",\n  },\n  suggestedSection: {\n    paddingHorizontal: 20,\n    paddingBottom: 16,\n  },\n  suggestedTitle: {\n    fontSize: 16,\n    fontWeight: \"600\",\n    color: \"#f9fafb\",\n    marginBottom: 12,\n  },\n  suggestedScrollView: {\n    flexDirection: \"row\",\n  },\n  suggestedChip: {\n    backgroundColor: \"#1e293b\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: \"#334155\",\n  },\n  suggestionText: {\n    fontSize: 12,\n    color: \"#f9fafb\",\n  },\n  messagesContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  messagesContent: {\n    paddingBottom: 20,\n  },\n  messageContainer: {\n    flexDirection: \"row\",\n    marginBottom: 16,\n    alignItems: \"flex-end\",\n  },\n  userMessageContainer: {\n    justifyContent: \"flex-end\",\n  },\n  aiMessageContainer: {\n    justifyContent: \"flex-start\",\n  },\n  aiAvatar: {\n    backgroundColor: \"#3b82f6\",\n    marginRight: 8,\n  },\n  userAvatar: {\n    backgroundColor: \"#64748b\",\n    marginLeft: 8,\n  },\n  messageBubble: {\n    maxWidth: \"75%\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 18,\n  },\n  userBubble: {\n    backgroundColor: \"#3b82f6\",\n    borderBottomRightRadius: 4,\n  },\n  aiBubble: {\n    backgroundColor: \"#1e293b\",\n    borderBottomLeftRadius: 4,\n  },\n  messageText: {\n    fontSize: 14,\n    color: \"white\",\n    lineHeight: 20,\n  },\n  aiMessageText: {\n    color: \"#f9fafb\",\n  },\n  timestamp: {\n    fontSize: 10,\n    color: \"rgba(255, 255, 255, 0.6)\",\n    marginTop: 4,\n  },\n  codeBlock: {\n    backgroundColor: \"#0a0a0a\",\n    borderRadius: 8,\n    padding: 12,\n    marginVertical: 8,\n    borderWidth: 1,\n    borderColor: \"#333\",\n  },\n  codeText: {\n    fontFamily: \"monospace\",\n    fontSize: 12,\n    color: \"#10b981\",\n  },\n  typingContainer: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    marginBottom: 16,\n  },\n  typingBubble: {\n    backgroundColor: \"#1e293b\",\n    borderRadius: 18,\n    borderBottomLeftRadius: 4,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    marginLeft: 8,\n  },\n  typingText: {\n    fontSize: 14,\n    color: \"#f9fafb\",\n    marginBottom: 4,\n  },\n  typingDots: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  typingDot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    backgroundColor: \"#64748b\",\n    marginRight: 4,\n  },\n  typingDot1: {\n    opacity: 0.4,\n  },\n  typingDot2: {\n    opacity: 0.7,\n  },\n  typingDot3: {\n    opacity: 1,\n  },\n  inputContainer: {\n    padding: 20,\n    backgroundColor: \"#0f172a\",\n    borderTopWidth: 1,\n    borderTopColor: \"#1e293b\",\n  },\n  inputRow: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    backgroundColor: \"#1e293b\",\n    borderRadius: 24,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginBottom: 8,\n  },\n  textInput: {\n    flex: 1,\n    color: \"#f9fafb\",\n    fontSize: 14,\n    maxHeight: 100,\n    paddingVertical: 8,\n  },\n  sendButton: {\n    backgroundColor: \"#3b82f6\",\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 8,\n  },\n  sendButtonDisabled: {\n    backgroundColor: \"#374151\",\n  },\n  disclaimer: {\n    fontSize: 11,\n    color: \"#64748b\",\n    textAlign: \"center\",\n    fontStyle: \"italic\",\n  },\n});\n\nexport default AIChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}